INFO  17:19:03,924 - Compiling source file: E:\ETF\7.semestar\PP\Project\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  17:19:04,069 - #2 program
INFO  17:19:04,069 - #14 test302
INFO  17:19:04,069 - #5 namespace
INFO  17:19:04,071 - #14 Addition
INFO  17:19:04,071 - #3 {
INFO  17:19:04,072 - #3 {
INFO  17:19:04,073 - #14 int
INFO  17:19:04,075 - #14 sum
INFO  17:19:04,075 - #19 (
INFO  17:19:04,075 - #14 int
INFO  17:19:04,075 - #14 z
INFO  17:19:04,076 - #8 ,
INFO  17:19:04,077 - #14 int
INFO  17:19:04,077 - #14 d
INFO  17:19:04,077 - #20 )
INFO  17:19:04,078 - #3 {
INFO  17:19:04,079 - #26 return
INFO  17:19:04,081 - #14 z
INFO  17:19:04,083 - #41 +
INFO  17:19:04,086 - #14 d
INFO  17:19:04,088 - #9 ;
INFO  17:19:04,089 - #4 }
INFO  17:19:04,089 - #14 int
INFO  17:19:04,090 - #14 inkrement
INFO  17:19:04,090 - #19 (
INFO  17:19:04,090 - #14 int
INFO  17:19:04,090 - #14 a
INFO  17:19:04,090 - #8 ,
INFO  17:19:04,090 - #14 int
INFO  17:19:04,090 - #14 inc
INFO  17:19:04,091 - #20 )
INFO  17:19:04,091 - #14 int
INFO  17:19:04,091 - #14 pom
INFO  17:19:04,091 - #9 ;
INFO  17:19:04,092 - #3 {
INFO  17:19:04,093 - #22 if
INFO  17:19:04,093 - #19 (
INFO  17:19:04,093 - #14 inc
INFO  17:19:04,093 - #35 ==
INFO  17:19:04,093 - #11 1
INFO  17:19:04,096 - #20 )
INFO  17:19:04,099 - #14 pom
INFO  17:19:04,099 - #7 =
INFO  17:19:04,099 - #11 1
INFO  17:19:04,101 - #9 ;
INFO  17:19:04,102 - #24 else
INFO  17:19:04,102 - #22 if
INFO  17:19:04,102 - #19 (
INFO  17:19:04,102 - #14 inc
INFO  17:19:04,102 - #35 ==
INFO  17:19:04,102 - #11 2
INFO  17:19:04,102 - #20 )
INFO  17:19:04,103 - #14 pom
INFO  17:19:04,103 - #7 =
INFO  17:19:04,103 - #14 a
INFO  17:19:04,103 - #9 ;
INFO  17:19:04,103 - #26 return
INFO  17:19:04,105 - #14 sum
INFO  17:19:04,105 - #19 (
INFO  17:19:04,105 - #14 a
INFO  17:19:04,105 - #8 ,
INFO  17:19:04,107 - #14 pom
INFO  17:19:04,107 - #20 )
INFO  17:19:04,108 - #9 ;
INFO  17:19:04,108 - #4 }
INFO  17:19:04,108 - #4 }
INFO  17:19:04,108 - #4 }
INFO  17:19:04,108 - #5 namespace
INFO  17:19:04,110 - #14 Unpacking
INFO  17:19:04,110 - #3 {
INFO  17:19:04,110 - #14 int
INFO  17:19:04,110 - #14 niz
INFO  17:19:04,110 - #17 [
INFO  17:19:04,110 - #18 ]
INFO  17:19:04,110 - #8 ,
INFO  17:19:04,111 - #14 niz2
INFO  17:19:04,111 - #17 [
INFO  17:19:04,111 - #18 ]
INFO  17:19:04,111 - #8 ,
INFO  17:19:04,111 - #14 niz3
INFO  17:19:04,111 - #17 [
INFO  17:19:04,111 - #18 ]
INFO  17:19:04,111 - #9 ;
INFO  17:19:04,111 - #14 int
INFO  17:19:04,112 - #14 a
INFO  17:19:04,112 - #8 ,
INFO  17:19:04,112 - #14 b
INFO  17:19:04,112 - #9 ;
INFO  17:19:04,112 - #3 {
INFO  17:19:04,112 - #4 }
INFO  17:19:04,113 - #4 }
INFO  17:19:04,113 - #14 int
INFO  17:19:04,113 - #14 i
INFO  17:19:04,113 - #9 ;
INFO  17:19:04,113 - #14 bool
INFO  17:19:04,113 - #14 ibool
INFO  17:19:04,113 - #9 ;
INFO  17:19:04,113 - #14 int
INFO  17:19:04,113 - #14 niz2
INFO  17:19:04,113 - #9 ;
INFO  17:19:04,114 - #14 int
INFO  17:19:04,114 - #14 niz
INFO  17:19:04,114 - #17 [
INFO  17:19:04,114 - #18 ]
INFO  17:19:04,114 - #9 ;
INFO  17:19:04,114 - #14 int
INFO  17:19:04,114 - #14 a
INFO  17:19:04,114 - #8 ,
INFO  17:19:04,114 - #14 curr
INFO  17:19:04,114 - #9 ;
INFO  17:19:04,115 - #3 {
INFO  17:19:04,115 - #14 bool
INFO  17:19:04,115 - #14 verify
INFO  17:19:04,115 - #19 (
INFO  17:19:04,115 - #20 )
INFO  17:19:04,116 - #3 {
INFO  17:19:04,116 - #46 print
INFO  17:19:04,117 - #19 (
INFO  17:19:04,117 - #16 'v'
INFO  17:19:04,117 - #20 )
