INFO  18:48:03,996 - Compiling source file: E:\ETF\7.semestar\PP\Project\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  18:48:04,083 - #2 program
INFO  18:48:04,083 - #14 test302
INFO  18:48:04,083 - #5 namespace
INFO  18:48:04,084 - #14 Addition
INFO  18:48:04,084 - #3 {
INFO  18:48:04,084 - #3 {
INFO  18:48:04,085 - #14 int
INFO  18:48:04,086 - #14 sum
INFO  18:48:04,086 - #19 (
INFO  18:48:04,087 - #14 int
INFO  18:48:04,087 - #14 z
INFO  18:48:04,087 - #8 ,
INFO  18:48:04,087 - #14 int
INFO  18:48:04,088 - #14 d
INFO  18:48:04,088 - #20 )
INFO  18:48:04,088 - #3 {
INFO  18:48:04,089 - #26 return
INFO  18:48:04,090 - #14 z
INFO  18:48:04,091 - #41 +
INFO  18:48:04,093 - #14 d
INFO  18:48:04,094 - #9 ;
INFO  18:48:04,095 - #4 }
INFO  18:48:04,095 - #14 int
INFO  18:48:04,095 - #14 inkrement
INFO  18:48:04,095 - #19 (
INFO  18:48:04,095 - #14 int
INFO  18:48:04,095 - #14 a
INFO  18:48:04,095 - #8 ,
INFO  18:48:04,095 - #14 int
INFO  18:48:04,095 - #14 inc
INFO  18:48:04,095 - #20 )
INFO  18:48:04,095 - #14 int
INFO  18:48:04,095 - #14 pom
INFO  18:48:04,095 - #9 ;
INFO  18:48:04,096 - #3 {
INFO  18:48:04,096 - #22 if
INFO  18:48:04,097 - #19 (
INFO  18:48:04,097 - #14 inc
INFO  18:48:04,097 - #35 ==
INFO  18:48:04,097 - #11 1
INFO  18:48:04,098 - #20 )
INFO  18:48:04,100 - #14 pom
INFO  18:48:04,101 - #7 =
INFO  18:48:04,101 - #11 1
INFO  18:48:04,102 - #9 ;
INFO  18:48:04,102 - #24 else
INFO  18:48:04,102 - #22 if
INFO  18:48:04,102 - #19 (
INFO  18:48:04,102 - #14 inc
INFO  18:48:04,102 - #35 ==
INFO  18:48:04,102 - #11 2
INFO  18:48:04,102 - #20 )
INFO  18:48:04,102 - #14 pom
INFO  18:48:04,102 - #7 =
INFO  18:48:04,102 - #14 a
INFO  18:48:04,102 - #9 ;
INFO  18:48:04,103 - #26 return
INFO  18:48:04,103 - #14 sum
INFO  18:48:04,103 - #19 (
INFO  18:48:04,104 - #14 a
INFO  18:48:04,104 - #8 ,
INFO  18:48:04,104 - #14 pom
INFO  18:48:04,104 - #20 )
INFO  18:48:04,105 - #9 ;
INFO  18:48:04,105 - #4 }
INFO  18:48:04,105 - #4 }
INFO  18:48:04,105 - #4 }
INFO  18:48:04,105 - #5 namespace
INFO  18:48:04,106 - #14 Unpacking
INFO  18:48:04,106 - #3 {
INFO  18:48:04,106 - #14 int
INFO  18:48:04,106 - #14 niz
INFO  18:48:04,106 - #17 [
INFO  18:48:04,106 - #18 ]
INFO  18:48:04,106 - #8 ,
INFO  18:48:04,106 - #14 niz2
INFO  18:48:04,106 - #17 [
INFO  18:48:04,106 - #18 ]
INFO  18:48:04,106 - #8 ,
INFO  18:48:04,106 - #14 niz3
INFO  18:48:04,106 - #17 [
INFO  18:48:04,106 - #18 ]
INFO  18:48:04,106 - #9 ;
INFO  18:48:04,106 - #14 int
INFO  18:48:04,107 - #14 a
INFO  18:48:04,107 - #8 ,
INFO  18:48:04,107 - #14 b
INFO  18:48:04,107 - #9 ;
INFO  18:48:04,107 - #3 {
INFO  18:48:04,107 - #4 }
INFO  18:48:04,107 - #4 }
INFO  18:48:04,107 - #14 int
INFO  18:48:04,107 - #14 i
INFO  18:48:04,107 - #9 ;
INFO  18:48:04,107 - #14 bool
INFO  18:48:04,107 - #14 ibool
INFO  18:48:04,107 - #9 ;
INFO  18:48:04,107 - #14 int
INFO  18:48:04,107 - #14 niz2
INFO  18:48:04,107 - #9 ;
INFO  18:48:04,107 - #14 int
INFO  18:48:04,107 - #14 niz
INFO  18:48:04,107 - #17 [
INFO  18:48:04,107 - #18 ]
INFO  18:48:04,107 - #9 ;
INFO  18:48:04,108 - #14 int
INFO  18:48:04,108 - #14 a
INFO  18:48:04,108 - #8 ,
INFO  18:48:04,108 - #14 curr
INFO  18:48:04,108 - #9 ;
INFO  18:48:04,108 - #3 {
INFO  18:48:04,108 - #14 bool
INFO  18:48:04,108 - #14 verify
INFO  18:48:04,108 - #19 (
INFO  18:48:04,108 - #20 )
INFO  18:48:04,109 - #3 {
INFO  18:48:04,109 - #46 print
INFO  18:48:04,109 - #19 (
INFO  18:48:04,109 - #16 'v'
INFO  18:48:04,109 - #20 )
INFO  18:48:04,110 - #9 ;
INFO  18:48:04,110 - #26 return
INFO  18:48:04,110 - #13 false
INFO  18:48:04,110 - #9 ;
